/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as HeaderImport } from './routes/_header'
import { Route as HeaderIndexImport } from './routes/_header/index'
import { Route as AuthSignupImport } from './routes/auth/signup'
import { Route as AuthLoginImport } from './routes/auth/login'

// Create/Update Routes

const HeaderRoute = HeaderImport.update({
  id: '/_header',
  getParentRoute: () => rootRoute,
} as any)

const HeaderIndexRoute = HeaderIndexImport.update({
  path: '/',
  getParentRoute: () => HeaderRoute,
} as any)

const AuthSignupRoute = AuthSignupImport.update({
  path: '/auth/signup',
  getParentRoute: () => rootRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_header': {
      id: '/_header'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof HeaderImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof rootRoute
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupImport
      parentRoute: typeof rootRoute
    }
    '/_header/': {
      id: '/_header/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof HeaderIndexImport
      parentRoute: typeof HeaderImport
    }
  }
}

// Create and export the route tree

interface HeaderRouteChildren {
  HeaderIndexRoute: typeof HeaderIndexRoute
}

const HeaderRouteChildren: HeaderRouteChildren = {
  HeaderIndexRoute: HeaderIndexRoute,
}

const HeaderRouteWithChildren =
  HeaderRoute._addFileChildren(HeaderRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof HeaderRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/': typeof HeaderIndexRoute
}

export interface FileRoutesByTo {
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/': typeof HeaderIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_header': typeof HeaderRouteWithChildren
  '/auth/login': typeof AuthLoginRoute
  '/auth/signup': typeof AuthSignupRoute
  '/_header/': typeof HeaderIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/auth/login' | '/auth/signup' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth/login' | '/auth/signup' | '/'
  id: '__root__' | '/_header' | '/auth/login' | '/auth/signup' | '/_header/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  HeaderRoute: typeof HeaderRouteWithChildren
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const rootRouteChildren: RootRouteChildren = {
  HeaderRoute: HeaderRouteWithChildren,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_header",
        "/auth/login",
        "/auth/signup"
      ]
    },
    "/_header": {
      "filePath": "_header.tsx",
      "children": [
        "/_header/"
      ]
    },
    "/auth/login": {
      "filePath": "auth/login.tsx"
    },
    "/auth/signup": {
      "filePath": "auth/signup.tsx"
    },
    "/_header/": {
      "filePath": "_header/index.tsx",
      "parent": "/_header"
    }
  }
}
ROUTE_MANIFEST_END */
